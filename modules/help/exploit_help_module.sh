#!/bin/bash
source pakuri.conf

function help_passcrack()
{
    clear
    echo -e ""
    echo -e "${RED_b}+---+  ${BLUE_b}+---+"
    echo -e "${RED_b}| 2 |  ${BLUE_b}| 1 |  Password Crack"
    echo -e "${RED_b}+---+  ${BLUE_b}+---+${NC}"
    echo -e "------------------------------------------------------"
    echo -e "Overview"
    echo -e "   Use Brutespray to make a brute-force attack on a login-attemptable port."
    echo -e ""
    echo -e "${GREEN_b}Step 1${NC}"
    echo -e "   First, use NMAP to find out which ports are open."
    echo -e ""
    echo -e "Use Command:"
    echo -e "   nmap -T4 -p- --max-retries 1 --max-scan-delay 20 --defeat-rst-ratelimit --open -oX <.xml file> -iL <Target ip lists>"
    echo -e "Options:"
    echo -e "   --max-retries <tries>: Caps number of port scan probe retransmissions."
    echo -e "   --scan-delay/--max-scan-delay <time>: Adjust delay between probes"
    echo -e "   --defeat-rst-ratelimit: Ignore rate limit"
    echo -e "   --open: Only show open (or possibly open) ports"
    echo -e "   -iL <inputfilename>: Input from list of hosts/networks"
    echo -e ""
    echo -e "${GREEN_b}Step 2${NC}"
    echo -e "   Next, Brutespray is executed based on the result of Nmap executed in Step1."
    echo -e ""
    echo -e "Use Command:"
    echo -e "   brutespray --file <Nmap execution results in xml format> --output <output directory> --threads 5 --hosts 5"
    echo -e "Options:"
    echo -e "   -f FILE, --file FILE: GNMAP or XML file to parse"
    echo -e "   -o OUTPUT, --output OUTPUT: Directory containing successful attempts"
    echo -e "   -t THREADS, --threads THREADS: number of medusa threads"
    echo -e "   -T HOSTS, --hosts HOSTS: number of hosts to test concurrently"
}

case $1 in
    21)
        help_passcrack;;
esac