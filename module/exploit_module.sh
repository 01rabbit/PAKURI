function exploit_banner()
{
    echo -e "${RED}"
    echo -e " ███████╗██╗  ██╗██████╗ ██╗      ██████╗ ██╗████████╗"
    echo -e " ██╔════╝╚██╗██╔╝██╔══██╗██║     ██╔═══██╗██║╚══██╔══╝"
    echo -e " █████╗   ╚███╔╝ ██████╔╝██║     ██║   ██║██║   ██║   "
    echo -e " ██╔══╝   ██╔██╗ ██╔═══╝ ██║     ██║   ██║██║   ██║   "
    echo -e " ███████╗██╔╝ ██╗██║     ███████╗╚██████╔╝██║   ██║   "
    echo -e " ╚══════╝╚═╝  ╚═╝╚═╝     ╚══════╝ ╚═════╝ ╚═╝   ╚═╝   "
    echo -e "   -With great power comes great responsibility.-"
    echo -e "${NC}"
}

function passcrack_menu()
{
    local ans

    echo -e "${BLUE_b}+---+"
    echo -e "| 1 | Password Crack"
    echo -e "+---+${NC}"
    echo -e "------------------- Select Action --------------------"
    echo -e ""
    echo -e "${BLUE_b}+---+"
    echo -e "| 1 | Single"
    echo -e "+---+"
    echo -e "${RED_b}+---+"
    echo -e "| 2 | Multi"
    echo -e "+---+"
    echo -e "${BLACK_b}+---+"
    echo -e "| 9 | Back"
    echo -e "+---+"
    echo -e "${NC}"
    read -n 1 -s ans
    if [ $ans = 1 ];then
        echo -e "1"
    elif [ $ans = 2 ];then
        echo -e "2"
    fi
}

function metasploit_menu()
{
    local key
    local ans

    echo -e "${RED_b}+---+"
    echo -e "| 2 | Metasploit"
    echo -e "+---+${NC}"
    echo -e "------------------- Metasploit Menu --------------------"
    echo -e ""
    echo -e "${BLUE_b}+---+"
    echo -e "| 1 | Setup"
    echo -e "+---+"
    echo -e "${RED_b}+---+"
    echo -e "| 2 | Import to msf databas"
    echo -e "+---+"
    echo -e "${YELLOW_b}+---+"
    echo -e "| 3 | Check the hosts (msf db)"
    echo -e "+---+"
    echo -e "${GREEN_b}+---+"
    echo -e "| 4 | Check the services (msf db)"
    echo -e "+---+"
    echo -e "${BLACK_b}+---+"
    echo -e "| 9 | Back"
    echo -e "+---+"
    echo -e "${NC}"
    read -n 1 -s key
    clear
    exploit_banner
    date
    echo -e "------------------- Exploit Menu --------------------"
    echo -e "${RED_b}+---+"
    echo -e "| 2 | Metasploit"
    echo -e "+---+${NC}"
    echo -e "------------------- Metasploit Menu --------------------"
    case $key in
        1 )
            clear
            exploit_banner
            date
            echo -e "------------------- Exploit Menu --------------------"
            echo -e "${RED_b}+---+"
            echo -e "| 2 | Metasploit"
            echo -e "+---+${NC}"
            echo -e "------------------- Metasploit Menu --------------------"
            echo -e "${BLUE_b}+---+"
            echo -e "| 1 | Setup"
            echo -e "+---+${NC}"
            echo -e "------------------- Select Action --------------------"
            echo -e ""
            echo -e "${BLUE_b}+---+"
            echo -e "| 1 | Create and initialize the msf database"
            echo -e "+---+"
            echo -e "${RED_b}+---+"
            echo -e "| 2 | Delete msf database"
            echo -e "+---+"
            echo -e "${YELLOW_b}+---+"
            echo -e "| 3 | Start Matasploit"
            echo -e "+---+"
            echo -e "${GREEN_b}+---+"
            echo -e "| 4 | Stop Matasploit"
            echo -e "+---+"
            echo -e "${BLACK_b}+---+"
            echo -e "| 9 | Back"
            echo -e "+---+"
            echo -e "${NC}"
            read -n 1 -s ans
            clear
            exploit_banner
            date
            echo -e "------------------- Exploit Menu --------------------"
            echo -e "${RED_b}+---+"
            echo -e "| 2 | Metasploit"
            echo -e "+---+${NC}"
            echo -e "------------------- Metasploit Menu --------------------"
            echo -e "${BLUE_b}+---+"
            echo -e "| 1 | Setup"
            echo -e "+---+${NC}"
            echo -e "------------------- Select Action --------------------"
            if [ $ans = 1 ];then
                echo -e "${BLUE_b}+---+"
                echo -e "| 1 | Create and initialize the msf database"
                echo -e "+---+"
                echo -e "${NC}"
                tmux send-keys -t $WINDOW_NAME.1 'msfdb init' C-m
                echo -e "Press any key to continue..."
                read
            elif [ $ans = 2 ];then
                echo -e "${RED_b}+---+"
                echo -e "| 2 | Delete msf database"
                echo -e "+---+"
                echo -e "${NC}"
                echo -e "Do you really want to delete?"
                echo -e "${GREEN_b}+---+         ${RED_b}+---+"
                echo -e "${GREEN_b}| 1 | yes  ${NC}|  ${RED_b}| 2 | no"
                echo -e "${GREEN_b}+---+         ${RED_b}+---+"
                echo -e "${NC}"
                read -n 1 -s ans
                if [ $ans -eq 1 ];then
                    tmux send-keys -t $WINDOW_NAME.1 'msfdb delete' C-m
                    echo -e "Press any key to continue..."
                    read
                fi
            elif [ $ans = 3 ];then
                echo -e "${YELLOW_b}+---+"
                echo -e "| 3 | Start Matasploit"
                echo -e "+---+"
                echo -e "${NC}"
                tmux send-keys -t $WINDOW_NAME.1 'msfconsole' C-m
                sleep 20
                echo -e "Press any key to continue..."
                read
            elif [ $ans = 4 ];then
                echo -e "${GREEN_b}+---+"
                echo -e "| 4 | Stop Matasploit"
                echo -e "+---+"
                echo -e "${NC}"
                echo -e "Running Metasploit termination processing..."
                tmux send-keys -t $WINDOW_NAME.1 'exit -y' C-m
                sleep 2
                if [ `tmux list-panes|wc -l` = 1 ];then
                    tmux split-window -t $SESSION_NAME.0 -h
                    tmux select-pane -t $SESSION_NAME.0
                else
                    tmux send-keys -t $WINDOW_NAME.1 'clear' C-m
                fi 
            fi ;;
        2 )
            echo -e "${RED_b}+---+"
            echo -e "| 2 | Import to msf databas"
            echo -e "+---+"
            echo -e "${NC}"
            for i in `find $WDIR -name \*.xml`
            do
                tmux send-keys -t $WINDOW_NAME.1 "db_import $i" C-m
            done
            echo -e "Press any key to continue..."
            read ;;
        3 )
            echo -e "${YELLOW_b}+---+"
            echo -e "| 3 | Check the hosts (msf db)"
            echo -e "+---+"
            echo -e "${NC}"
            tmux send-keys -t $WINDOW_NAME.1 'hosts' C-m
            echo -e "Press any key to continue..."
            read ;;
        4 )
            echo -e "${GREEN_b}+---+"
            echo -e "| 4 | Check the services (msf db)"
            echo -e "+---+"
            tmux send-keys -t $WINDOW_NAME.1 'services' C-m
            echo -e "Press any key to continue..."
            read ;;
        9 )
            break ;;
    esac
}
function exploit_manage()
{
    local key
    local ans
    
    while :
    do
        clear
        exploit_banner
        date
        echo -e "------------------- Exploit Menu --------------------"
        echo -e "${BLUE_b}+---+"
        echo -e "| 1 | Password Crack"
        echo -e "+---+"
        echo -e "${RED_b}+---+"
        echo -e "| 2 | Metasploit"
        echo -e "+---+"
        echo -e "${BLACK_b}+---+"
        echo -e "| 9 | Back"
        echo -e "+---+"
        echo -e "${NC}"
        read -n 1 -t 5 -s key
        clear
        exploit_banner
        date
        echo -e "------------------- Exploit Menu --------------------"
        case "$key" in
            1 )
                passcrack_menu ;;
            2 )
                metasploit_menu ;;
            9 )
                tmux send-keys -t $WINDOW_NAME.1 'exit -y' C-m
                sleep 2
                if [ `tmux list-panes|wc -l` = 1 ];then
                    tmux split-window -t $SESSION_NAME.0 -h
                    tmux select-pane -t $SESSION_NAME.0
                else
                    tmux send-keys -t $WINDOW_NAME.1 'clear' C-m
                fi 
                break ;;
            * )
                echo "error" ;;
        esac
    done
}